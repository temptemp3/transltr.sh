#!/bin/bash
## transltr
## version 0.0.1 - initial
##################################################
. ${SH2}/error.sh 		# error handling
error "true"			# show errors
. ${SH2}/cecho.sh 		# colored echo
. ${SH2}/build.sh 		# builder
. ${SH2}/aliases/commands.sh	# commands
file-mime-encoding() { { local infile ; infile="${1}" ; }
  file --mime-encoding ${infile} | cut '-d:' '-f2' | sed 's/\s//g'
}
setup-translation() {
  ja=$( echo ${line} | cut '-d ' '-f2' )
  en=$( echo ${line} | cut '-d ' '-f3-' )
}
translate() {
  local line
  local en  
  local js
  join {JP,EN}.txt | while read -r line
  do
   setup-translation
   echo "s/${en}/${ja}/g"
  done
}
transltr-translate-payload() { 
  sed -f ${temp} ${infile} > $( dirname ${infile} )/$( basename ${infile} .html )-jp.html
}
transltr-translate() { { local infiles ; infiles="${@}" ; }
  local temp
  temp=$( mktemp )
  test -f "EN.txt" || { "error EN.txt not present" ; false ; }
  test "$( file-mime-encoding EN.txt )" = "utf-8" || { "error JP.txt not in utf-8" ; false ; }
  test -f "JP.txt" || { "error JP.txt not present" ; false ; }
  test "$( file-mime-encoding JP.txt )" = "utf-8" || { "error JP.txt not in utf-8" ; false ; }
  cecho yellow $( cp -v EN.txt ${temp}-en )
  cecho yellow $( cp -v JP.txt ${temp}-ja )
  translate > ${temp}
  local infile
  for infile in ${infiles}
  do
   echo ${infile}
   ${FUNCNAME}-payload ${infile}
  done
  cecho yellow "$( rm -v ${temp}* )"
}
transltr-build() {
  build=build
  build true
}
transltr-true() {
  true
}
transltr-help() {
  cat << EOF
transltr

transltr translate
	INPUT
		EN.txt	English
		JP.txt	Japanese
		1 - infile.html
	Output
		infile-jp.html
EOF
}
transltr() {
  commands
}
##################################################
if [ ! ] 
then
 true
else
 exit 1 # wrong args
fi
##################################################
transltr ${@}
##################################################
## generated by create-stub2.sh v0.1.2
## on Mon, 08 Jul 2019 15:24:44 +0900
## see <https://github.com/temptemp3/sh2>
##################################################
